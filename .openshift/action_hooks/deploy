#!/usr/bin/php
<?php
// This deploy hook gets executed after dependencies are resolved and the
// build hook has been run but before the application has been started back
// up again.  This script gets executed directly, so it could be python, php,
// ruby, etc.

// symlink "web" folder, default webroot in symfony 2 to "php" - webroot
// recognized by openshift
$repoDir = getenv('OPENSHIFT_REPO_DIR');
$cmd = "ln -s {$repoDir}web {$repoDir}php";
echo $cmd . "\n";
echo `$cmd`;

// to persist vendor code in a place which is not reset upon each deploy - 
// create "symfony2_vendor" subfolder under OPENSHIFT_DATA_DIR and 
// symlink it as "vendors" 
$dataDir = getenv('OPENSHIFT_DATA_DIR');
$vendorsDir = "{$dataDir}symfony2_vendor";
if (!is_dir($vendorsDir)) {
	mkdir($vendorsDir);
}
$cmd = "ln -s {$vendorsDir} {$repoDir}vendor";
echo $cmd . "\n";
echo `$cmd`;

// copy parameters.yml file, required by symfony (also by hook scripts 
// started by composer) from .openshift/app_data folder
$cmd = "cp {$repoDir}.openshift/app_data/parameters.yml {$repoDir}app/config/";
echo $cmd . "\n";
echo `$cmd`;

// get comoser.phar with official installer
chdir($repoDir);
echo `curl -sS https://getcomposer.org/installer | php`;

// install dependencies from the composer.lock file
echo `./composer.phar install`;

putenv("SYMFONY__DATABASE__HOST=" . getenv('OPENSHIFT_MYSQL_DB_HOST'));
putenv("SYMFONY__DATABASE__PORT=" . getenv('OPENSHIFT_MYSQL_DB_PORT'));
putenv("SYMFONY__DATABASE__USER=" . getenv('OPENSHIFT_MYSQL_DB_USERNAME'));
putenv("SYMFONY__DATABASE__PASSWORD=" . getenv('OPENSHIFT_MYSQL_DB_PASSWORD'));